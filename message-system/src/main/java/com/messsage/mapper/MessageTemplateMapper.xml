<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.MessageTemplateMapper">
  <resultMap id="BaseResultMap" type="model.MessageTemplate">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="target_type" jdbcType="VARCHAR" property="targetType" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="model.MessageTemplate">
    <result column="template" jdbcType="LONGVARCHAR" property="template" />
  </resultMap>
  <sql id="Base_Column_List">
    id, target_type, action, type
  </sql>
  <sql id="Blob_Column_List">
    template
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from m_message_template
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from m_message_template
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="model.MessageTemplate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_message_template (target_type, action, type, 
      template)
    values (#{targetType,jdbcType=VARCHAR}, #{action,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{template,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.MessageTemplate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_message_template
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="targetType != null">
        target_type,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="template != null">
        template,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="targetType != null">
        #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="template != null">
        #{template,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.MessageTemplate">
    update m_message_template
    <set>
      <if test="targetType != null">
        target_type = #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="template != null">
        template = #{template,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.MessageTemplate">
    update m_message_template
    set target_type = #{targetType,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      template = #{template,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.MessageTemplate">
    update m_message_template
    set target_type = #{targetType,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>