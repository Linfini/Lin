<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.MessageNotifyMapper">
  <resultMap id="BaseResultMap" type="model.MessageNotify">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user" jdbcType="BIGINT" property="user" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="message_id" jdbcType="BIGINT" property="messageId" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user, state, message_id, channel, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from m_message_notify
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from m_message_notify
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="model.MessageNotify">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_message_notify (user, state, message_id, 
      channel, create_time)
    values (#{user,jdbcType=BIGINT}, #{state,jdbcType=VARCHAR}, #{messageId,jdbcType=BIGINT}, 
      #{channel,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="model.MessageNotify">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_message_notify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user != null">
        user,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user != null">
        #{user,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=BIGINT},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.MessageNotify">
    update m_message_notify
    <set>
      <if test="user != null">
        user = #{user,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=BIGINT},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.MessageNotify">
    update m_message_notify
    set user = #{user,jdbcType=BIGINT},
      state = #{state,jdbcType=VARCHAR},
      message_id = #{messageId,jdbcType=BIGINT},
      channel = #{channel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>